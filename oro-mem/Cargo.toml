[package]
name = "oro-mem"
version.workspace = true
description = "Common memory management utilities for the Oro operating system."
publish = false
edition = "2024"
authors = [
	"Josh Junon (https//github.com/qix-)"
]
homepage = "https://oro.sh"
repository = "https://github.com/oro-os/kernel"
license = "MPL-2.0"

[lib]
doctest = false

[features]
default = []
# Works around non-composability of `test` profile and global allocator conflicts in unit test runner.
#
# This is needed as a workaround of Cargo passing `#[cfg(test)]` only to the top-level crate and not
# dependencies (which makes sense, but is a problem for us). That makes the typical `#[cfg(test)]`
# gate for the kernel's `#[global_allocator]` attribute not work as expected in unit tests, causing
# them to instead try to allocate from a physical address based global allocator which is nonsensical
# in a `std` environment (as the physical pages are not mapped nor populated from the boot routines).
#
# Thus, this is a 'negation' feature, whereby enabling it turns *off* the global allocator subsystem
# in the kernel, allowing the unit tests to use the default `std` allocator. It's meant to be specified
# in the `dev-dependencies` section of the kernel's `Cargo.toml`, which are only enabled when running
# tests and benchmarks.
std-alloc = []

[dependencies]
oro-macro.workspace = true
oro-elf.workspace = true
oro-debug.workspace = true
oro-dbgutil.workspace = true
oro-sync.workspace = true

buddy_system_allocator.workspace = true

[lints]
workspace = true
