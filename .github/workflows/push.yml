name: Build and Lint
on:
  push:
    branches:
      - master
  pull_request:

env:
  RUST_BACKTRACE: full

jobs:
  lint-rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/rust
      - name: Lint (rustfmt)
        run: cargo fmt --all -- --check
  lint-clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/rust
      - name: Lint (clippy) [common]
        run: cargo oro-clippy-common
      - name: Lint (clippy) [x86_64]
        run: cargo oro-clippy-x86_64
      - name: Lint (clippy) [aarch64]
        run: cargo oro-clippy-aarch64
  lint-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/rust
      - name: Lint (rustdoc - x86_64)
        run: env RUSTFLAGS="-D warnings" RUSTDOCFLAGS="-D rustdoc::all" cargo doc --all-features --lib --target=oro-arch-x86_64/x86_64-unknown-oro.json -Zunstable-options -Zbuild-std=core,compiler_builtins,alloc -Zbuild-std-features=compiler-builtins-mem
      - name: Lint (rustdoc - aarch64)
        run: env RUSTFLAGS="-D warnings" RUSTDOCFLAGS="-D rustdoc::all" cargo doc --all-features --lib --target=oro-arch-aarch64/aarch64-unknown-oro.json -Zunstable-options -Zbuild-std=core,compiler_builtins,alloc -Zbuild-std-features=compiler-builtins-mem
  lint-python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Lint (python)
        run: |
          pip install black
          black --check .
  build-kernel-x86_64:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        profile: ["dev", "release"]
        flags: [
          "--all-features",
          "--no-default-features"
        ]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/rust
      - name: Build
        run: cargo kernel-x86_64 --profile ${{ matrix.profile }} ${{ matrix.flags }}
  build-limine-x86_64:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        profile: ["dev", "release"]
        flags: [
          "--all-features",
          "--no-default-features"
        ]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/rust
      - name: Build
        run: cargo limine-x86_64 --profile ${{ matrix.profile }} ${{ matrix.flags }}
  build-kernel-aarch64:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        profile: ["dev", "release"]
        flags: [
          "--all-features",
          "--no-default-features"
        ]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/rust
      - name: Build
        run: cargo kernel-aarch64 --profile ${{ matrix.profile }} ${{ matrix.flags }}
  build-limine-aarch64:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        profile: ["dev", "release"]
        flags: [
          "--all-features",
          "--no-default-features"
        ]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/rust
      - name: Build
        run: cargo limine-aarch64 --profile ${{ matrix.profile }} ${{ matrix.flags }}
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/rust
      - name: Test
        run: cargo oro-test
