name: Build & Test - x64
on:
  push:
    # FIXME(qix-): DRY this up when\b\bif actions/runner#1182 is ever fixed.
    paths:
      - '.github/workflows/build-x64.yml'
      - '.gitmodules'
      - '.gitignore'
      - 'oro-*/**'
      - 'triple/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - 'Makefile'
      - 'rust-toolchain.toml'
  pull_request:
    paths:
      - '.github/workflows/build-x64.yml'
      - '.gitmodules'
      - '.gitignore'
      - 'oro-*/**'
      - 'triple/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - 'Makefile'
      - 'rust-toolchain.toml'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install dependencies
        run: sudo apt install graphicsmagick libgraphicsmagick-dev
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-x86_64-unknown-linux-gnu
          components: rustfmt, clippy, llvm-tools-preview, rust-src
          default: true
      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: target/
          key: x64-kernel-build-target
      - name: Build <D>
        run: make all DEBUG=1
      - name: Build <R>
        run: make all
      - name: Build <D-T>
        run: make all TEST=1 DEBUG=1
      - name: Build <R-T>
        run: make all x64-limine.pxe TEST=1
      - name: Lint
        run: make lint
      - name: Clippy
        run: make clippy DEBUG=1
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: kernel-pxe
          path: target/x64/test-release/pxe
  test-link:
    name: Test - Link
    runs-on: [self-hosted, oro, oro-link, x64]
    needs: build
    steps:
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: kernel-pxe
          path: /oro
      - name: Test kernel
        env:
          TITLE: ${{ github.event.pull_request.title || github.event.push.head_commit.message || github.event.workflow_run.head_commit.message || github.event.head_commit.message }}
          REF: ${{ github.ref_name || github.ref }}
          AUTHOR: ${{ github.actor }}
        run: >-
          link-test
          --pxe-uefi BOOTX64.EFI
          --pxe-bios limine-bios-pxe.bin
          --name "$TITLE"
          --ref "$REF"
          --author "$AUTHOR"
          --num-tests 42
          --github-actions
          --
          /usr/bin/env bash -c 'sleep 720'
